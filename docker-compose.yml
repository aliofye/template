services:
  db:
    image: postgres:latest
    logging:
      driver: none
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    profiles: [dev, prod]
  dev:
    build:
      context: .
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./packages/api
          target: /app/packages/api
          ignore:
            - node_modules/
        - action: sync
          path: ./packages/web
          target: /app/packages/web
          ignore:
            - node_modules/
            - dist/
    ports:
      - 5173:5173
      - 3000:3000
    environment:
      NODE_ENV: development
      PUBLIC_API_PORT: 3000
      PUBLIC_WEB_API_URL: http://localhost:3000
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
    entrypoint: ./scripts/dev-entrypoint.sh
    profiles: [dev]
  prod:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PUBLIC_WEB_API_URL: http://localhost:5173/api
    develop:
      watch:
        - action: sync+restart
          path: ./Caddyfile
          target: /etc/caddy/Caddyfile
        - action: sync+restart
          path: ./packages/api
          target: /app/packages/api
          ignore:
            - node_modules/
        - action: rebuild
          path: ./packages/web
          target: /app/packages/web
          ignore:
            - node_modules/
            - dist/
    ports:
      - 5173:443
    environment:
      NODE_ENV: production
      PUBLIC_API_PORT: 3000
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
    entrypoint: ./scripts/prod-entrypoint.sh
    profiles: [prod]

  